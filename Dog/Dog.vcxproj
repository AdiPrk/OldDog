<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|Win32">
      <Configuration>MinSizeRel</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|Win32">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>17.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{d81606df-6ec2-4195-a4fa-c531b35534bf}</ProjectGuid>
    <RootNamespace>Dog</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <OutDir>$(SolutionDir)$(ProjectName)\bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)$(ProjectName)\bin\int\$(Platform)\$(Configuration)\</IntDir>
    <LibraryPath>$(LibraryPath)</LibraryPath>
    <IncludePath>$(ProjectDir)src;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>$(SolutionDir)$(ProjectName)\bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)$(ProjectName)\bin\int\$(Platform)\$(Configuration)\</IntDir>
    <LibraryPath>$(LibraryPath)</LibraryPath>
    <IncludePath>$(ProjectDir)src;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <OutDir>$(SolutionDir)$(ProjectName)\bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)$(ProjectName)\bin\int\$(Platform)\$(Configuration)\</IntDir>
    <LibraryPath>$(LibraryPath)</LibraryPath>
    <IncludePath>$(ProjectDir)src;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <OutDir>$(SolutionDir)$(ProjectName)\bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)$(ProjectName)\bin\int\$(Platform)\$(Configuration)\</IntDir>
    <LibraryPath>$(LibraryPath)</LibraryPath>
    <IncludePath>$(ProjectDir)src;$(IncludePath)</IncludePath>
    <LinkIncremental>false</LinkIncremental>
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>$(SolutionDir)$(ProjectName)\bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)$(ProjectName)\bin\int\$(Platform)\$(Configuration)\</IntDir>
    <LibraryPath>$(LibraryPath)</LibraryPath>
    <IncludePath>$(ProjectDir)src;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>$(SolutionDir)$(ProjectName)\bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)$(ProjectName)\bin\int\$(Platform)\$(Configuration)\</IntDir>
    <LibraryPath>$(LibraryPath)</LibraryPath>
    <IncludePath>$(ProjectDir)src;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <OutDir>$(SolutionDir)$(ProjectName)\bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)$(ProjectName)\bin\int\$(Platform)\$(Configuration)\</IntDir>
    <LibraryPath>$(LibraryPath)</LibraryPath>
    <IncludePath>$(ProjectDir)src;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <OutDir>$(SolutionDir)$(ProjectName)\bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(SolutionDir)$(ProjectName)\bin\int\$(Platform)\$(Configuration)\</IntDir>
    <LibraryPath>$(LibraryPath)</LibraryPath>
    <IncludePath>$(ProjectDir)src;$(IncludePath)</IncludePath>
    <LinkIncremental>false</LinkIncremental>
    <GenerateManifest>false</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>DOG_DEBUG;DOG_EXPORTS;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)externals\glfw\include;$(ProjectDir)externals\glew\include;$(ProjectDir)externals\spdlog\include;$(ProjectDir)externals\stb_image;$(ProjectDir)externals\entt\include;$(SolutionDir)PCH;$(SolutionDir)SharedDependencies\glm;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>PCH/dogpch.h</PrecompiledHeaderFile>
      <DisableSpecificWarnings>4251</DisableSpecificWarnings>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)externals\glfw\lib-vc2022;$(ProjectDir)externals\glew\lib\$(Platform);$(ProjectDir)externals\spdlog\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\common_pch.obj;glew32s.lib;opengl32.lib;glfw3_mt.lib;spdlog.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/ignore:4099 %(AdditionalOptions)</AdditionalOptions>
      <IgnoreAllDefaultLibraries>
      </IgnoreAllDefaultLibraries>
    </Link>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" "$(IntDir)"
if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" "$(IntDir)"

robocopy "$(ProjectDir)DogAssets" "$(TargetDir)DogAssets" /MIR
copy "$(ProjectDir)externals\glew\lib\dll" "$(TargetDir)"
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>DOG_EXPORTS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)externals\glfw\include;$(ProjectDir)externals\glew\include;$(ProjectDir)externals\spdlog\include;$(ProjectDir)externals\stb_image;$(ProjectDir)externals\entt\include;$(SolutionDir)PCH;$(SolutionDir)SharedDependencies\glm;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>PCH/dogpch.h</PrecompiledHeaderFile>
      <DisableSpecificWarnings>4251</DisableSpecificWarnings>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)externals\glfw\lib-vc2022;$(ProjectDir)externals\glew\lib\$(Platform);$(ProjectDir)externals\spdlog\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\common_pch.obj;glew32s.lib;opengl32.lib;glfw3_mt.lib;spdlog.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/ignore:4099 %(AdditionalOptions)</AdditionalOptions>
      <IgnoreAllDefaultLibraries>
      </IgnoreAllDefaultLibraries>
    </Link>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" "$(IntDir)"
if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" "$(IntDir)"

robocopy "$(ProjectDir)DogAssets" "$(TargetDir)DogAssets" /MIR
copy "$(ProjectDir)externals\glew\lib\dll" "$(TargetDir)"
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>DOG_EXPORTS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)externals\glfw\include;$(ProjectDir)externals\glew\include;$(ProjectDir)externals\spdlog\include;$(ProjectDir)externals\stb_image;$(ProjectDir)externals\entt\include;$(SolutionDir)PCH;$(SolutionDir)SharedDependencies\glm;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>PCH/dogpch.h</PrecompiledHeaderFile>
      <DisableSpecificWarnings>4251</DisableSpecificWarnings>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)externals\glfw\lib-vc2022;$(ProjectDir)externals\glew\lib\$(Platform);$(ProjectDir)externals\spdlog\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\common_pch.obj;glew32s.lib;opengl32.lib;glfw3_mt.lib;spdlog.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/ignore:4099 %(AdditionalOptions)</AdditionalOptions>
      <IgnoreAllDefaultLibraries>
      </IgnoreAllDefaultLibraries>
    </Link>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" "$(IntDir)"
if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" "$(IntDir)"

robocopy "$(ProjectDir)DogAssets" "$(TargetDir)DogAssets" /MIR
copy "$(ProjectDir)externals\glew\lib\dll" "$(TargetDir)"
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>DOG_EXPORTS;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)externals\glfw\include;$(ProjectDir)externals\glew\include;$(ProjectDir)externals\spdlog\include;$(ProjectDir)externals\stb_image;$(ProjectDir)externals\entt\include;$(SolutionDir)PCH;$(SolutionDir)SharedDependencies\glm;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>PCH/dogpch.h</PrecompiledHeaderFile>
      <DisableSpecificWarnings>4251</DisableSpecificWarnings>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <Optimization>MinSpace</Optimization>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <BufferSecurityCheck>false</BufferSecurityCheck>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)externals\glfw\lib-vc2022;$(ProjectDir)externals\glew\lib\$(Platform);$(ProjectDir)externals\spdlog\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\common_pch.obj;glew32s.lib;opengl32.lib;glfw3_mt.lib;spdlog.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/ignore:4099 %(AdditionalOptions)</AdditionalOptions>
      <IgnoreAllDefaultLibraries>
      </IgnoreAllDefaultLibraries>
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
    </Link>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" "$(IntDir)"
if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" "$(IntDir)"

robocopy "$(ProjectDir)DogAssets" "$(TargetDir)DogAssets" /MIR
copy "$(ProjectDir)externals\glew\lib\dll" "$(TargetDir)"
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>DOG_DEBUG;DOG_EXPORTS;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)externals\glfw\include;$(ProjectDir)externals\glew\include;$(ProjectDir)externals\spdlog\include;$(ProjectDir)externals\stb_image;$(ProjectDir)externals\entt\include;$(SolutionDir)PCH;$(SolutionDir)SharedDependencies\glm;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>PCH/dogpch.h</PrecompiledHeaderFile>
      <DisableSpecificWarnings>4251</DisableSpecificWarnings>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)externals\glfw\lib-vc2022;$(ProjectDir)externals\glew\lib\$(Platform);$(ProjectDir)externals\spdlog\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\common_pch.obj;glew32s.lib;opengl32.lib;glfw3_mt.lib;spdlog.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/ignore:4099 %(AdditionalOptions)</AdditionalOptions>
      <IgnoreAllDefaultLibraries>
      </IgnoreAllDefaultLibraries>
    </Link>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" "$(IntDir)"
if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" "$(IntDir)"

robocopy "$(ProjectDir)DogAssets" "$(TargetDir)DogAssets" /MIR
copy "$(ProjectDir)externals\glew\lib\dll" "$(TargetDir)"
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>DOG_EXPORTS;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)externals\glfw\include;$(ProjectDir)externals\glew\include;$(ProjectDir)externals\spdlog\include;$(ProjectDir)externals\stb_image;$(ProjectDir)externals\entt\include;$(SolutionDir)PCH;$(SolutionDir)SharedDependencies\glm;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>PCH/dogpch.h</PrecompiledHeaderFile>
      <DisableSpecificWarnings>4251</DisableSpecificWarnings>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)externals\glfw\lib-vc2022;$(ProjectDir)externals\glew\lib\$(Platform);$(ProjectDir)externals\spdlog\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\common_pch.obj;glew32s.lib;opengl32.lib;glfw3_mt.lib;spdlog.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/ignore:4099 %(AdditionalOptions)</AdditionalOptions>
      <IgnoreAllDefaultLibraries>
      </IgnoreAllDefaultLibraries>
    </Link>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" "$(IntDir)"
if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" "$(IntDir)"

robocopy "$(ProjectDir)DogAssets" "$(TargetDir)DogAssets" /MIR
copy "$(ProjectDir)externals\glew\lib\dll" "$(TargetDir)"
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>DOG_EXPORTS;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)externals\glfw\include;$(ProjectDir)externals\glew\include;$(ProjectDir)externals\spdlog\include;$(ProjectDir)externals\stb_image;$(ProjectDir)externals\entt\include;$(SolutionDir)PCH;$(SolutionDir)SharedDependencies\glm;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>PCH/dogpch.h</PrecompiledHeaderFile>
      <DisableSpecificWarnings>4251</DisableSpecificWarnings>
      <LanguageStandard>stdcpp20</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)externals\glfw\lib-vc2022;$(ProjectDir)externals\glew\lib\$(Platform);$(ProjectDir)externals\spdlog\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\common_pch.obj;glew32s.lib;opengl32.lib;glfw3_mt.lib;spdlog.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/ignore:4099 %(AdditionalOptions)</AdditionalOptions>
      <IgnoreAllDefaultLibraries>
      </IgnoreAllDefaultLibraries>
    </Link>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" "$(IntDir)"
if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" "$(IntDir)"

robocopy "$(ProjectDir)DogAssets" "$(TargetDir)DogAssets" /MIR
copy "$(ProjectDir)externals\glew\lib\dll" "$(TargetDir)"
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>DOG_EXPORTS;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>$(ProjectDir)externals\glfw\include;$(ProjectDir)externals\glew\include;$(ProjectDir)externals\spdlog\include;$(ProjectDir)externals\stb_image;$(ProjectDir)externals\entt\include;$(SolutionDir)PCH;$(SolutionDir)SharedDependencies\glm;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>PCH/dogpch.h</PrecompiledHeaderFile>
      <DisableSpecificWarnings>4251</DisableSpecificWarnings>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <Optimization>MinSpace</Optimization>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <BufferSecurityCheck>false</BufferSecurityCheck>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(ProjectDir)externals\glfw\lib-vc2022;$(ProjectDir)externals\glew\lib\$(Platform);$(ProjectDir)externals\spdlog\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\common_pch.obj;glew32s.lib;opengl32.lib;glfw3_mt.lib;spdlog.lib;$(CoreLibraryDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>/ignore:4099 %(AdditionalOptions)</AdditionalOptions>
      <IgnoreAllDefaultLibraries>
      </IgnoreAllDefaultLibraries>
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
    </Link>
    <PostBuildEvent>
      <Command>
      </Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).pdb" "$(IntDir)"
if EXIST "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" xcopy /Y /F "$(SolutionDir)SharedPCH\$(Platform)\$(Configuration)\vc$(PlatformToolsetVersion).idb" "$(IntDir)"

robocopy "$(ProjectDir)DogAssets" "$(TargetDir)DogAssets" /MIR
copy "$(ProjectDir)externals\glew\lib\dll" "$(TargetDir)"
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="src\Dog\engine.cpp" />
    <ClCompile Include="src\Dog\Graphics\Camera\camera2d.cpp" />
    <ClCompile Include="src\Dog\Graphics\Renderer\Renderer3D\DeferredRenderer.cpp" />
    <ClCompile Include="src\Dog\Graphics\Renderer\Renderer2D\renderer2d.cpp" />
    <ClCompile Include="src\Dog\Graphics\Renderer\Renderer2D\texture2d.cpp" />
    <ClCompile Include="src\Dog\Graphics\Shaders\shader.cpp" />
    <ClCompile Include="src\Dog\Graphics\Window\window.cpp" />
    <ClCompile Include="src\Dog\Input\input.cpp" />
    <ClCompile Include="src\Dog\Logger\logger.cpp" />
    <ClCompile Include="src\Dog\Math\rect.cpp" />
    <ClCompile Include="src\Dog\Resources\resource.cpp" />
    <ClCompile Include="src\Dog\Resources\resourceFactory.cpp" />
    <ClCompile Include="src\Dog\Resources\resources.cpp" />
    <ClCompile Include="src\Dog\Scene\Entity\common.cpp" />
    <ClCompile Include="src\Dog\Scene\Entity\entity.cpp" />
    <ClCompile Include="src\Dog\Scene\scene.cpp" />
    <ClCompile Include="src\Dog\Scene\sceneData.cpp" />
    <ClCompile Include="src\Dog\Scene\sceneManager.cpp" />
    <ClCompile Include="src\PCH\dogpch.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">dogpch.h</PrecompiledHeaderFile>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">dogpch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|Win32'">dogpch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|Win32'">dogpch.h</PrecompiledHeaderFile>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">dogpch.h</PrecompiledHeaderFile>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Create</PrecompiledHeader>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Release|x64'">dogpch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">dogpch.h</PrecompiledHeaderFile>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">dogpch.h</PrecompiledHeaderFile>
    </ClCompile>
    <ClCompile Include="src\main.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="src\dog.h" />
    <ClInclude Include="src\Dog\engine.h" />
    <ClInclude Include="src\Dog\Graphics\Camera\camera2d.h" />
    <ClInclude Include="src\Dog\Graphics\Renderer\Renderer3D\DeferredRenderer.h" />
    <ClInclude Include="src\Dog\Graphics\Renderer\IRenderer.h" />
    <ClInclude Include="src\Dog\Graphics\Renderer\Renderer2D\renderer2d.h" />
    <ClInclude Include="src\Dog\Graphics\Renderer\Renderer2D\texture2d.h" />
    <ClInclude Include="src\Dog\Graphics\Shaders\shader.h" />
    <ClInclude Include="src\Dog\Graphics\Window\Iwindow.h" />
    <ClInclude Include="src\Dog\Graphics\Window\window.h" />
    <ClInclude Include="src\Dog\Input\input.h" />
    <ClInclude Include="src\Dog\Input\inputMap.h" />
    <ClInclude Include="src\Dog\Logger\logger.h" />
    <ClInclude Include="src\Dog\Math\rect.h" />
    <ClInclude Include="src\Dog\Resources\resource.h" />
    <ClInclude Include="src\Dog\Resources\resourceFactory.h" />
    <ClInclude Include="src\Dog\Resources\resources.h" />
    <ClInclude Include="src\Dog\Scene\Entity\common.h" />
    <ClInclude Include="src\Dog\Scene\Entity\component.h" />
    <ClInclude Include="src\Dog\Scene\Entity\entity.h" />
    <ClInclude Include="src\Dog\Scene\Entity\instantiation.h" />
    <ClInclude Include="src\Dog\Scene\scene.h" />
    <ClInclude Include="src\Dog\Scene\sceneData.h" />
    <ClInclude Include="src\Dog\Scene\sceneManager.h" />
    <ClInclude Include="src\PCH\dogpch.h" />
    <ClInclude Include="src\Dog\core.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="DogAssets\Shaders\defaultsprite.frag" />
    <None Include="DogAssets\Shaders\defaultsprite.vert" />
  </ItemGroup>
  <ItemGroup>
    <Image Include="DogAssets\Images\circle.png" />
    <Image Include="DogAssets\Images\circleOutline2.png" />
    <Image Include="DogAssets\Images\square.png" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>